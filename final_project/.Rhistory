heart<-read.csv("D://学习//大三上//探索性数据分析//final_project//diseaseb.csv",header=T,Encoding="utf-8")
heart<-read.csv("D://学习//大三上//探索性数据分析//final_project//diseaseb.csv",header=T,Encoding="UTF-8")
heart<-read.csv("D://学习//大三上//探索性数据分析//final_project//diseaseb.csv",header=T)
heart<-read.csv("D://学习//大三上//探索性数据分析//final_project//deseaseb.csv",header=T)
set.seed(12345)
nn=0.8
sub<-sample(1:nrow(heart),round(nrow(heart)*nn))
hearttrain<-audit2[sub,]
audit2
hearttrain<-heart[sub,]
hearttest<-heart[-sub,]
dim(hearttrain)
dim(hearttest)
str(hearttrain)
summary(age)
summary(hearttrain$age)
summary(heart$age)
summary(heart$cigsPerDay)
#因子化
heart$male<-as.factor(heart$male)
heart$education<-as.factor(heart$education)
heart$BPMeds<-as.factor(heart$BPMeds)
heart$prevalentStroke<-as.factor(heart$prevalentStroke)
heart$diabetes<-as.factor(heart$diabetes)
heart$prevalentHyp<-as.factor(heart$prevalentHyp)
heart$TenYearCHD<-as.factor(heart$TenYearCHD)
#划分训练集和测试集8:2
set.seed(12345)
nn=0.8
sub<-sample(1:nrow(heart),round(nrow(heart)*nn))
hearttrain<-heart[sub,]
hearttest<-heart[-sub,]
str(hearttrain)
#全模型放入AIC进行回归
glm1<-glm(TenYearCHD~.,family=binomial(link="logit"),data=hearttrain)
glm1_steped<-step(glm1,k=2)
summary(glm1_steped)
View(hearttrain)
View(heart)
pchisq(glm1_steped$deviance,glm1_steped$df.residual,lower.tail = FALSE)
anova(glm1_steped,test='Chisq')
library(ResourceSelection)
install.packages("ResourceSelection")
hoslem.test(glm1_steped$y,fitted(glm1_steped),g=10)
library(ResourceSelection)
hoslem.test(glm1_steped$y,fitted(glm1_steped),g=10)
summary(glm1_steped)
heart<-read.csv("D://学习//大三上//探索性数据分析//final_project//deseaseb.csv",header=T)
heart$male<-as.factor(heart$male)
heart$education<-as.factor(heart$education)
heart$BPMeds<-as.factor(heart$BPMeds)
heart$prevalentStroke<-as.factor(heart$prevalentStroke)
heart$diabetes<-as.factor(heart$diabetes)
heart$prevalentHyp<-as.factor(heart$prevalentHyp)
heart$TenYearCHD<-as.factor(heart$TenYearCHD)
heart$education<-factor(as.character(heart$education),levels("1","2","3","4"))
heart$education<-factor(as.character(heart$education),levels=c("1","2","3","4"))
#划分训练集和测试集8:2
set.seed(12345)
nn=0.8
sub<-sample(1:nrow(heart),round(nrow(heart)*nn))
hearttrain<-heart[sub,]
hearttest<-heart[-sub,]
#全模型放入AIC进行回归
glm1<-glm(TenYearCHD~.,family=binomial(link="logit"),data=hearttrain)
glm1_steped<-step(glm1,k=2)
summary(glm1_steped)
#卡方检验
pchisq(glm1_steped$deviance,glm1_steped$df.residual,lower.tail = FALSE)
anova(glm1_steped,test='Chisq')
#Hosmer-Lemeshow检验（因为自变量中有连续变量）
hoslem.test(glm1_steped$y,fitted(glm1_steped),g=10)
#推断
exp(glm1_steped$coefficients) #OR估计
#预测
pre<-predict(glm1_steped,credittest,type="response")
#预测
pre<-predict(glm1_steped,hearttest,type="response")
#预测效果（ROC）
roc<-roc(hearttest$TenYearCHD,pre)
library(DMwR)
library(ggplot2)
#预测效果（ROC）
roc<-roc(hearttest$TenYearCHD,pre)
library(VIM)
library(mice)
library(lattice)
#预测效果（ROC）
roc<-roc(hearttest$TenYearCHD,pre)
library(pROC)
#预测效果（ROC）
roc<-roc(hearttest$TenYearCHD,pre)
plot(roc,print.auc=TRUE,auc.polygon=TRUE,grid.col=c("green","red"),max.auc.polygon=TRUE,auc.polygon.col="skyblue")
#预测
pret<-predict(glm1_steped,hearttrain,type="response")
roct<-roc(hearttrain$TenYearCHD,pret)
plot(roct,print.auc=TRUE,auc.polygon=TRUE,grid.col=c("green","red"),max.auc.polygon=TRUE,auc.polygon.col="skyblue")
summary(glm1_steped)
anova(glm1_steped,test='Chisq')
glm2<-update(glm1_steped,.~.-diaBP)
summary(glm2)
hoslem.test(glm2$y,fitted(glm2),g=10)
pre2<-predict(glm2,hearttest,type="response")
roc2<-roc(hearttest$TenYearCHD,pre2)
plot(roc2,print.auc=TRUE,auc.polygon=TRUE,grid.col=c("green","red"),max.auc.polygon=TRUE,auc.polygon.col="skyblue")
M
glm3<-update(glm1,.~.-diaBP-BMI)
summary(glm3)
glm3<-update(glm1_steped,.~.-diaBP-BMI)
summary(glm3)
hoslem.test(glm3$y,fitted(glm3),g=10)
pre3<-predict(glm3,hearttest,type="response")
roc3<-roc(hearttest$TenYearCHD,pre3)
plot(roc3,print.auc=TRUE,auc.polygon=TRUE,grid.col=c("green","red"),max.auc.polygon=TRUE,auc.polygon.col="skyblue")
#似然比检验(似然比检验的零假设：固定效应模型是冗余的)
lrt<--2*(logLik(glm3)[1]-logLik(glm1_steped)[1])
pchisq(lrt,df=1,lower.tail = FALSE)
#deviance检验
anova(glm3,glm1_steped,test='Chisq')
?anova
#把education里不显著的分为一类
heartgrp<-heart
summary(glm3)
#把education里不显著的分为一类
heartgrp<-heart
for(i in (1:900)){
if(heartgrp$education[i] %in% c('2','3')){
heartgrp$education[i]<-'others'
}}
#把education里不显著的分为一类
heartgrp<-heart
for(i in (1:6743)){
if(heartgrp$education[i] %in% c('2','3')){
heartgrp$education[i]<-'others'
}}
warnings()
heart<-read.csv("D://学习//大三上//探索性数据分析//final_project//deseaseb.csv",header=T)
#把education里不显著的分为一类
heartgrp<-heart
for(i in (1:6743)){
if(heartgrp$education[i] %in% c('2','3')){
heartgrp$education[i]<-'others'
}}
glm4<-glm(TenYearCHD~.,family=binomial(link="logit"),data=heartgrp)
glm4_steped<-step(glm4,k=2)
summary(glm4_steped)
heart$male<-as.factor(heart$male)
heart$education<-as.factor(heart$education)
heart$BPMeds<-as.factor(heart$BPMeds)
heart$prevalentStroke<-as.factor(heart$prevalentStroke)
heart$diabetes<-as.factor(heart$diabetes)
heart$prevalentHyp<-as.factor(heart$prevalentHyp)
heart$TenYearCHD<-as.factor(heart$TenYearCHD)
#设定基准组，避免虚拟变量陷阱
heart$education<-factor(as.character(heart$education),levels=c("1","2","3","4"))
#全模型放入AIC进行回归
glm1<-glm(TenYearCHD~.,family=binomial(link="logit"),data=hearttrain)
glm1_steped<-step(glm1,k=2)
summary(glm1_steped)
summary(glm4_steped)
#特征选择
set.seed(1234)
library(caret)
control<-trainControl(method = "cv",number=10)
control_logistic<-trainControl(method = "boot",number=10)
model_logistic<-train(TenYearCHD~.,hearttrain,method="LogitBoost",
preProcess="scale",trControl=control_logistic)
importance1<-varImp(model_logistic,scale=FALSE)
print(importance1)
plot(importance1)
summary(glm3)
hoslem.test(glm3$y,fitted(glm3),g=10)
#卡方检验
pchisq(glm1_steped$deviance,glm1_steped$df.residual,lower.tail = FALSE)
anova(glm1_steped,test='Chisq')
model_logistic<-train(TenYearCHD~.-diaBp-heartRate,hearttrain,method="LogitBoost",
preProcess="scale",trControl=control_logistic)
model_logistic<-train(TenYearCHD~.-diaBP-heartRate,hearttrain,method="LogitBoost",
preProcess="scale",trControl=control_logistic)
importance1<-varImp(model_logistic,scale=FALSE)
print(importance1)
plot(importance1)
model_logistic<-train(TenYearCHD~sysBP+age+prevalentHyp+BPMeds+totChol+glucose+BMI+male+diabetes+prevalentStroke+cigsPerDay+education,hearttrain,method="LogitBoost",
preProcess="scale",trControl=control_logistic)
importance1<-varImp(model_logistic,scale=FALSE)
print(importance1)
plot(importance1)
heart<-read.csv("D://学习//大三上//探索性数据分析//final_project//deseaseb.csv",header=T)
heart$male<-as.factor(heart$male)
heart$education<-as.factor(heart$education)
heart$BPMeds<-as.factor(heart$BPMeds)
heart$prevalentStroke<-as.factor(heart$prevalentStroke)
heart$diabetes<-as.factor(heart$diabetes)
heart$prevalentHyp<-as.factor(heart$prevalentHyp)
heart$TenYearCHD<-as.factor(heart$TenYearCHD)
#设定基准组，避免虚拟变量陷阱
heart$education<-factor(as.character(heart$education),levels=c("1","2","3","4"))
#划分训练集和测试集8:2
set.seed(12345)
nn=0.8
sub<-sample(1:nrow(heart),round(nrow(heart)*nn))
hearttrain<-heart[sub,]
hearttest<-heart[-sub,]
#全模型放入AIC进行回归
glm1<-glm(TenYearCHD~.,family=binomial(link="logit"),data=hearttrain)
glm1_steped<-step(glm1,k=2)
summary(glm1_steped)
#Hosmer-Lemeshow检验（因为自变量中有连续变量）
hoslem.test(glm1_steped$y,fitted(glm1_steped),g=10)
library(ResourceSelection)
library(DMwR)
library(pROC)
#Hosmer-Lemeshow检验（因为自变量中有连续变量）
hoslem.test(glm1_steped$y,fitted(glm1_steped),g=10)
#预测
pret<-predict(glm1_steped,hearttrain,type="response")
pre<-predict(glm1_steped,hearttest,type="response")
#预测效果（ROC）
roc<-roc(hearttest$TenYearCHD,pre)
plot(roc,print.auc=TRUE,auc.polygon=TRUE,grid.col=c("green","red"),max.auc.polygon=TRUE,auc.polygon.col="skyblue")
roct<-roc(hearttrain$TenYearCHD,pret)
plot(roct,print.auc=TRUE,auc.polygon=TRUE,grid.col=c("green","red"),max.auc.polygon=TRUE,auc.polygon.col="skyblue")
glm3<-update(glm1_steped,.~.-diaBP-BMI)
summary(glm3)
hoslem.test(glm3$y,fitted(glm3),g=10)
pre3<-predict(glm3,hearttest,type="response")
roc3<-roc(hearttest$TenYearCHD,pre3)
plot(roc3,print.auc=TRUE,auc.polygon=TRUE,grid.col=c("green","red"),max.auc.polygon=TRUE,auc.polygon.col="skyblue")
#似然比检验(似然比检验的零假设：固定效应模型是冗余的)
lrt<--2*(logLik(glm3)[1]-logLik(glm1_steped)[1])
pchisq(lrt,df=1,lower.tail = FALSE)
#特征选择
set.seed(1234)
library(caret)
control<-trainControl(method = "cv",number=10)
control_logistic<-trainControl(method = "boot",number=10)
model_logistic<-train(TenYearCHD~sysBP+age+prevalentHyp+BPMeds+totChol+glucose+BMI+male+diabetes+prevalentStroke+cigsPerDay+education,hearttrain,
method="LogitBoost",preProcess="scale",trControl=control_logistic)
importance1<-varImp(model_logistic,scale=FALSE)
print(importance1)
plot(importance1)
plot(roc,print.auc=TRUE,auc.polygon=TRUE,grid.col=c("green","red"),max.auc.polygon=TRUE,auc.polygon.col="skyblue",print.thres=T)
?roc()
model_logistic<-train(TenYearCHD~sysBP+age+prevalentHyp+BPMeds+totChol+glucose+BMI+male+diabetes+prevalentStroke+cigsPerDay+education,hearttrain,
method="LogitBoost",trControl=control_logistic)
importance1<-varImp(model_logistic,scale=FALSE)
plot(importance1)
#可视化
library(ggplot2)
ggplot(heart,aes(x=diabetes,fill=glucose))+geom_bar(position = "fill")
heart$male<-as.factor(heart$male)
heart$education<-as.factor(heart$education)
heart$BPMeds<-as.factor(heart$BPMeds)
heart$prevalentStroke<-as.factor(heart$prevalentStroke)
heart$diabetes<-as.factor(heart$diabetes)
heart$prevalentHyp<-as.factor(heart$prevalentHyp)
heart$TenYearCHD<-as.factor(heart$TenYearCHD)
ggplot(heart,aes(x=diabetes,fill=glucose))+geom_bar(position = "fill")
heart<-read.csv("D://学习//大三上//探索性数据分析//final_project//deseaseb.csv",header=T)
#因子化
heart$male<-as.factor(heart$male)
heart$education<-as.factor(heart$education)
heart$BPMeds<-as.factor(heart$BPMeds)
heart$prevalentStroke<-as.factor(heart$prevalentStroke)
heart$diabetes<-as.factor(heart$diabetes)
heart$prevalentHyp<-as.factor(heart$prevalentHyp)
heart$TenYearCHD<-as.factor(heart$TenYearCHD)
#设定基准组，避免虚拟变量陷阱
heart$education<-factor(as.character(heart$education),levels=c("1","2","3","4"))
ggplot(heart,aes(x=diabetes,fill=glucose))+geom_bar(position = "fill")
ggplot(heart)+geom_boxplot(aes(x=diabetes,y=glucose,fill=diabetes))
ggplot(heart,aes(x=prevalentHyp,fill=BPMeds))+geom_bar(position = "fill")
ggplot(heart)+geom_histogram(aes(x=TenYearCHD,fill=TenYearCHD))+facet_wrap(~TenYearCHD)
ggplot(heart)+geom_histogram(aes(x=age,fill=TenYearCHD))+facet_wrap(~TenYearCHD)
ggplot(heart)+geom_histogram(aes(x=age,fill=TenYearCHD),binwidth = 0.5)+facet_wrap(~TenYearCHD)
ggplot(heart)+geom_histogram(aes(x=age,fill=TenYearCHD),binwidth = 1)+facet_wrap(~TenYearCHD)
ggplot(heart)+geom_histogram(aes(x=age,col=1,fill=TenYearCHD),position="identity",bins=30,alpha=0.8)+facet_wrap(~TenYearCHD)
ggplot(heart)+geom_histogram(aes(x=age,col=1,fill=TenYearCHD),position="identity",bins=30,alpha=0.8)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=age,col=1,fill=TenYearCHD),position="identity",alpha=0.8)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=age,col=1,fill=TenYearCHD),position="identity",alpha=0.8)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=age,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth = 1)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=age,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth = 3)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
#totChol/sysBP/glucose/heartRate/cigsperday
ggplot(heart)+geom_histogram(aes(x=totChol,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth = 3)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
#totChol/sysBP/glucose/heartRate/cigsperday
ggplot(heart)+geom_histogram(aes(x=totChol,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth = 20)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
#totChol/sysBP/glucose/heartRate/cigsperday
ggplot(heart)+geom_histogram(aes(x=totChol,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth = 50)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
#totChol/sysBP/glucose/heartRate/cigsperday
ggplot(heart)+geom_histogram(aes(x=totChol,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth = 40)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=sysBP,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth = 3)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=sysBP,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth =20)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=sysBP,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth =10)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=sysBP,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth =13)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=sysBP,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth =15)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=glucose,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth = 3)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=glucose,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth =20)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=glucose,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth =15)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=glucose,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth =10)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=heartRate,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth = 3)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=heartRate,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth =20)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=heartRate,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth =10)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=heartRate,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth =5)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=heartRate,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth =7)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=cigsPerDay,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth = 3)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=cigsPerDay,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth = 6)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
#totChol/sysBP/glucose/heartRate/cigsperday
ggplot(heart)+geom_histogram(aes(x=totChol,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth = 40)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=sysBP,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth =15)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=glucose,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth =10)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=heartRate,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth =7)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_histogram(aes(x=cigsPerDay,col=1,fill=TenYearCHD),position="identity",alpha=0.8,binwidth = 6)+facet_wrap(~TenYearCHD)+guides(color=FALSE)
ggplot(heart)+geom_boxplot(aes(x=TenYearCHD,y=cigsPerDay,fill=TenYearCHD))+labs(x="cigsPerDay")
ggplot(heart)+geom_boxplot(aes(x=TenYearCHD,y=age,fill=TenYearCHD),alpha=0.8)+labs(x="totChol")
#可视化
library(ggplot2)
ggplot(heart)+geom_boxplot(aes(x=TenYearCHD,y=age,fill=TenYearCHD),alpha=0.8)+labs(x="totChol")
ggplot(heart,aes(x=BPMeds,fill=TenYearCHD))+geom_bar(position = "fill",alpha=0.8)
ggplot(heart,aes(x=diabetes,fill=TenYearCHD))+geom_bar(position = "fill",alpha=0.8)
ggplot(heart)+geom_boxplot(aes(x=TenYearCHD,y=diaBP,fill=TenYearCHD))+labs(x="diaBP",,alpha=0.8)
ggplot(heart)+geom_boxplot(aes(x=TenYearCHD,y=diaBP,fill=TenYearCHD),alpha=0.8)+labs(x="diaBP")
ggplot(heart,aes(x=prevalentHyp,fill=TenYearCHD))+geom_bar(position = "fill",alpha=0.8)
ggplot(heart,aes(x=prevalentStroke,fill=TenYearCHD))+geom_bar(position = "fill",alpha=0.8)
ggplot(heart)+geom_boxplot(aes(x=TenYearCHD,y=age,fill=TenYearCHD),alpha=0.8)+labs(x="totChol")
ggplot(heart)+geom_boxplot(aes(x=TenYearCHD,y=age,fill=TenYearCHD),alpha=0.8)+labs(x="age")
ggplot(heart)+geom_boxplot(aes(x=TenYearCHD,y=BMI,fill=TenYearCHD),alpha=0.8)+labs(x="BMI")
ggplot(heart,aes(x=education,fill=TenYearCHD))+geom_bar(position = "fill",alpha=0.8)
ggplot(heart,aes(x=male,fill=TenYearCHD))+geom_bar(position = "fill",alpha=0.8)
#预测正确率
rpart.mod<-rpart(TenYearCHD~.,data= train,
method='class',
parms=list(prior=c(0.65,0.35),split='gini'),
control=tc)
#预测正确率
library(rpart)
rpart.mod<-rpart(TenYearCHD~.,data= train,
method='class',
parms=list(prior=c(0.65,0.35),split='gini'),
control=tc)
rpart.mod<-rpart(TenYearCHD~.,data= hearttrain,
method='class',
parms=list(prior=c(0.65,0.35),split='gini'),
control=tc)
logi.pred<-predict(glm1_steped,type="response",newdata= hearttest)
result2<-ifelse(logi.pred>=0.5,1,0)
accuracy2[num]<- accuracy2[num]+table(test[,15]==result2)["TRUE"]/length(result2)
#预测效果（ROC）
roc<-roc(hearttest$TenYearCHD,pre)
library(pROC)
#预测效果（ROC）
roc<-roc(hearttest$TenYearCHD,pre)
plot(roc,print.auc=TRUE,auc.polygon=TRUE,grid.col=c("green","red"),max.auc.polygon=TRUE,auc.polygon.col="skyblue",print.thres=T)
roct<-roc(hearttrain$TenYearCHD,pret)
plot(roct,print.auc=TRUE,auc.polygon=TRUE,grid.col=c("green","red"),max.auc.polygon=TRUE,auc.polygon.col="skyblue")
plot(roc,print.auc=TRUE,auc.polygon=TRUE,grid.col=c("green","red"),max.auc.polygon=TRUE,auc.polygon.col="skyblue",print.thres=T)
plot(roct,print.auc=TRUE,auc.polygon=TRUE,grid.col=c("green","red"),max.auc.polygon=TRUE,auc.polygon.col="skyblue",print.thres=T)
prob<-1/(1+exp(-pre))
heart<-read.csv("D://学习//大三上//探索性数据分析//final_project//deseaseb.csv",header=T)
heart$male<-as.factor(heart$male)
heart$education<-as.factor(heart$education)
heart$BPMeds<-as.factor(heart$BPMeds)
heart$prevalentStroke<-as.factor(heart$prevalentStroke)
heart$diabetes<-as.factor(heart$diabetes)
heart$prevalentHyp<-as.factor(heart$prevalentHyp)
heart$TenYearCHD<-as.factor(heart$TenYearCHD)
#设定基准组，避免虚拟变量陷阱
heart$education<-factor(as.character(heart$education),levels=c("1","2","3","4"))
#划分训练集和测试集8:2
set.seed(12345)
nn=0.8
sub<-sample(1:nrow(heart),round(nrow(heart)*nn))
hearttrain<-heart[sub,]
hearttest<-heart[-sub,]
dim(hearttrain)
dim(hearttest)
str(hearttrain)
#全模型放入AIC进行回归
glm1<-glm(TenYearCHD~.,family=binomial(link="logit"),data=hearttrain)
glm1_steped<-step(glm1,k=2)
summary(glm1)
summary(glm1_steped)
#卡方检验
pchisq(glm1_steped$deviance,glm1_steped$df.residual,lower.tail = FALSE)
#预测
pret<-predict(glm1_steped,hearttrain,type="response")
pre<-predict(glm1_steped,hearttest,type="response")
prob<-1/(1+exp(-pre))
pre_CHD<-NULL
pre_CHD[prob>0.5]<-1
pre_CHD[prob<=0.5]<-0
library(caret)
ismatrix<-confusionMatrix(as.factor(pre_CHD),as.factor(hearttest$TenYearCHD))
ismatrix
ismatrix<-confusionMatrix(as.factor(pre_CHD),as.factor(hearttrain$TenYearCHD))
ismatrix
confusionMatrix(as.factor(pre_CHD),as.factor(hearttrain$TenYearCHD))
heart<-read.csv("D://学习//大三上//探索性数据分析//final_project//deseaseb.csv",header=T)
?matrix()
#独立性检验
table(heart$BPMeds,heart$prevalentHyp)
?table()
is.data.frame(x)
#独立性检验
x<-table(heart$BPMeds,heart$prevalentHyp)
is.data.frame(x)
is.matrix(x)
chisq.test(x)
x2<-table(heart$diaBP,heart$sysBP)
chisq.test(x2)
x2
corr(heart$diaBP,heart$sysBP)
library(cor)
cor(heart$diaBP,heart$sysBP)
x2<-table(heart$prevalentHyp,heart$prevalentStroke)
chisq.test(x2)
heart$male<-as.factor(heart$male)
heart$education<-as.factor(heart$education)
heart$BPMeds<-as.factor(heart$BPMeds)
heart$prevalentStroke<-as.factor(heart$prevalentStroke)
heart$diabetes<-as.factor(heart$diabetes)
heart$prevalentHyp<-as.factor(heart$prevalentHyp)
heart$TenYearCHD<-as.factor(heart$TenYearCHD)
#设定基准组，避免虚拟变量陷阱
heart$education<-factor(as.character(heart$education),levels=c("1","2","3","4"))
#全模型放入AIC进行回归
glm1<-glm(TenYearCHD~.,family=binomial(link="logit"),data=hearttrain)
#划分训练集和测试集8:2
set.seed(12345)
nn=0.8
sub<-sample(1:nrow(heart),round(nrow(heart)*nn))
hearttrain<-heart[sub,]
hearttest<-heart[-sub,]
dim(hearttrain)
dim(hearttest)
#全模型放入AIC进行回归
glm1<-glm(TenYearCHD~.,family=binomial(link="logit"),data=hearttrain)
glm1_steped<-step(glm1,k=2)
#卡方检验
pchisq(glm1_steped$deviance,glm1_steped$df.residual,lower.tail = FALSE)
#Hosmer-Lemeshow检验（因为自变量中有连续变量）
hoslem.test(glm1_steped$y,fitted(glm1_steped),g=10)
library(ResourceSelection)
#Hosmer-Lemeshow检验（因为自变量中有连续变量）
hoslem.test(glm1_steped$y,fitted(glm1_steped),g=10)
?hoslem.test
?fitted()
#Hosmer-Lemeshow检验（因为自变量中有连续变量）
hoslem.test(glm1_steped$y,fitted(glm1_steped))
#Hosmer-Lemeshow检验（因为自变量中有连续变量）
hoslem.test(glm1_steped$y,fitted(glm1_steped),g=13)
#Hosmer-Lemeshow检验（因为自变量中有连续变量）
hoslem.test(glm1_steped$y,fitted(glm1_steped),g=5)
#Hosmer-Lemeshow检验（因为自变量中有连续变量）
hoslem.test(glm1_steped$y,fitted(glm1_steped),g=2)
#Hosmer-Lemeshow检验（因为自变量中有连续变量）
hoslem.test(glm1_steped$y,fitted(glm1_steped),g=4)
heart<-read.csv("D://学习//大三上//探索性数据分析//final_project//heartdisease.csv",header=T)
heart<-read.csv("D://学习//大三上//探索性数据分析//final_project//heartdisease.csv",header=T)
#因子化
heart$male<-as.factor(heart$male)
heart$education<-as.factor(heart$education)
heart$BPMeds<-as.factor(heart$BPMeds)
heart$prevalentStroke<-as.factor(heart$prevalentStroke)
heart$diabetes<-as.factor(heart$diabetes)
heart$prevalentHyp<-as.factor(heart$prevalentHyp)
heart$TenYearCHD<-as.factor(heart$TenYearCHD)
#设定基准组，避免虚拟变量陷阱
heart$education<-factor(as.character(heart$education),levels=c("1","2","3","4"))
#划分训练集和测试集8:2
set.seed(12345)
nn=0.8
sub<-sample(1:nrow(heart),round(nrow(heart)*nn))
hearttrain<-heart[sub,]
hearttest<-heart[-sub,]
#全模型放入AIC进行回归
glm1<-glm(TenYearCHD~.,family=binomial(link="logit"),data=hearttrain)
glm1_steped<-step(glm1,k=2)
heart<-read.csv("D://学习//大三上//探索性数据分析//final_project//heartdisease.csv",header=T)
heart_knn<-knnImputation(heart,k=10,meth="weighAvg")
library(DMwR)
heart_knn<-knnImputation(heart,k=10,meth="weighAvg")
y<-c(which(heart_knn$glucose>150))
heart_new<-heart_knn[-y,]
heart_new<-heart_new[-c(which(heart_knn$BMI>40)),]
heart_new<-heart_new[-c(which(heart_knn$totChol>645)),]
heart_new$male<-as.factor(heart_new$male)
heart_new$education<-as.factor(heart_new$education)
heart_new$currentSmoker<-as.factor(heart_new$currentSmoker)
heart_new$BPMeds<-as.factor(heart_new$BPMeds)
heart_new$prevalentStroke<-as.factor(heart_new$prevalentStroke)
heart_new$prevalentHyp<-as.factor(heart_new$prevalentHyp)
heart_new$diabetes<-as.factor(heart_new$diabetes)
heart_new$TenYearCHD<-as.factor(heart_new$TenYearCHD)
#全模型放入AIC进行回归
glm1<-glm(TenYearCHD~.,family=binomial(link="logit"),data=hearttrain)
#划分训练集和测试集8:2
set.seed(12345)
nn=0.8
sub<-sample(1:nrow(heart),round(nrow(heart)*nn))
hearttrain<-heart[sub,]
hearttest<-heart[-sub,]
#全模型放入AIC进行回归
glm1<-glm(TenYearCHD~.,family=binomial(link="logit"),data=hearttrain)
glm1_steped<-step(glm1,k=2)
